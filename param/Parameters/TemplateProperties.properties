# HELLOWORLD PROPERTIES FILE
# The values in this file are the defualt values unless they are overriden by command-line arguments

#OUTPUT
# Output is $HOME plus output e.g $HOME = /Users/erikhemberg/ 
# and output = Desktop/tmp yields output in /Users/erikhemberg/Desktop/tmp 
# Empty means no output
output = 

# Individuals print
individual_catch_interval = -1

#GENERAL
generations = 200
population_size = 100
crossover_probability = 0.9
# Fixed point crossover is true if the point of crossover is the same on both
fixed_point_crossover = false
mutation_probability = 0.01
duplication_probability = 0.0

# Wrapping 0 means no wrapping
max_wraps = 0

# Due we want evolution to stop once a solution is found or not
stopWhenSolved=true

#REPLACEMENT
# Either steady_state or generational
replacement_type = generational
generation_gap=0.5
# If elite_size = -1 it is turned off, where size is number of individuals to be in the elites
# elite size should be a resonable size 10% of the population size is an sensible value
elite_size = 10

#INITIALISATION
initialiser = Operator.Initialiser
initial_chromosome_size = 200
#For RampedFullGrowInitialiser
#initialiser = Operator.RampedFullGrowInitialiser
#tail_percentage = 0.5
#grow_probability = 0.5
#max_depth = 10

#this specifies the type of derivation tree to use
derivation_tree=Mapper.DerivationTree

#Grammar File - What grammar to use
#grammar_file = Grammars/efp_grammar_gr.bnf
#grammar_file = Grammars/sf_grammar_gr.bnf
#grammar_file = Grammars/sr_grammar_gr.bnf
#grammar_file = Grammars/simple_sr.bnf
#grammar_file = Grammars/HelloWorld_grammar.bnf
grammar_file = Grammars/letter_grammar.bnf

#SELECTION
#For full list of possible selection methods examine /GEVA/GEVA/src/Operator/Operations
#selection_operation = Operator.Operations.RouletteWheelFitProp
#selection_operation=Operator.Operations.LSystemSelect
# Tournament selection
selection_operation = Operator.Operations.TournamentSelect
tournament_size = 2

#FITNESS FUNCTIONS
#For full list of fitness functions examine /GEVA/GEVA/src/FitnessEvaluation
# Fitness function requires the full package name
#fitness_function = FitnessEvaluation.SymbolicRegression.SymbolicRegressionBSF
#fitness_function = FitnessEvaluation.SymbolicRegression.SymbolicRegressionJScheme
#fitness_function = FitnessEvaluation.SantaFeAntTrail.SantaFeAntTrailBSF
#fitness_function = FitnessEvaluation.ParityProblem.EvenFiveParityFitnessBSF
fitness_function = FitnessEvaluation.PatternMatch.WordMatch
#fitness_function = FitnessEvaluation.HelloWorld.HelloWorldBSF

#MUTATION
mutation_operation=Operator.Operations.IntFlipMutation
#mutation_operation=Operator.Operations.NodalMutation
#mutation_operation=Operator.Operations.StructuralMutation



# Only needed for FitnessFunction.WordMatch
word = hello_world

#main_class need sto specify the main class to run
main_class=Main.Run

#Specify intiial chromosome size
initial_chromosome_size=200

#Number of generations to run for
generations=50

#Number of wrapping events allowed
max_wraps=0

#Maximum size of derivation tree used in GEVA
max_dt_depth=100

#Specific for the max problem where we specify the depth we want to find the max value for
MaxProblem_depth=8

#L-Systems only specify the numnber of items the user needs to pick
userpick_size=20

#CROSSOVER
crossover_operation=Operator.Operations.SinglePointCrossover

#Allows user to specify new type of derivation tree
derivation_tree=Mapper.DerivationTree

#Translates grammar  check up what this does
translate_grammar=true

#Evaluates the elites in the population
evaluate_elites=false


#evenfive
grammar_file=../param/Grammar/efp_grammar_gr.bnf
fitness_function=FitnessEvaluation.ParityProblem.BooleanInterpreter

#hello world
grammar_file=../param/Grammar/letter_grammar.bnf
fitness_function=FitnessEvaluation.PatternMatch.WordMatch
word = geva

#lawnmower
grammar_file=../param/Grammar/lawnmower.bnf
fitness_function=FitnessEvaluation.Lawnmower.Lawnmower
translate_grammar=true
lawnmower_size=10

#los altos
grammar_file=../param/Grammar/sf_interpreter.bnf
fitness_function=FitnessEvaluation.SantaFeAntTrail.SantaFeAntTrailInterpreter
trail_type = FitnessEvaluation.SantaFeAntTrail.LosAltosTrail

#lsystems
grammar_file=../param/Grammar/LSys_1.bnf
fitness_function=FitnessEvaluation.LSystem.LSystemInitialiser
selection_operation=Operator.Operations.LSystemSelect
elite_size=0

#max
maxproblem_depth = 8
grammar_file=../param/Grammar/max_grammar.bnf
fitness_function=FitnessEvaluation.MaxProblem.MaxProblemInterpreter

#paint
grammar_file=../param/Grammar/paint.bnf
fitness_function=FitnessEvaluation.Canvas.Paint

#royaltree
grammar_file=../param/Grammar/royal_tree.bnf
fitness_function=FitnessEvaluation.RoyalTree.RoyalTree

#san mateo
grammar_file=../param/Grammar/sf_interpreter.bnf
fitness_function=FitnessEvaluation.SantaFeAntTrail.SantaFeAntTrailInterpreter
trail_type = FitnessEvaluation.SantaFeAntTrail.SanMateoTrail

#santafe
grammar_file=../param/Grammar/sf_grammar_gr.bnf
fitness_function=FitnessEvaluation.SantaFeAntTrail.SantaFeAntTrailInterpreter
trail_type = FitnessEvaluation.SantaFeAntTrail.Trail

#symbreg
grammar_file=../param/Grammar/sr_grammar_sch.bnf
fitness_function=FitnessEvaluation.SymbolicRegression.SymbolicRegressionInterpreter

